var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/interfaces/ChoiceSelectedEvent.html",[0,1.047,1,1.315]],["body/interfaces/ChoiceSelectedEvent.html",[0,0.965,1,1.212,2,0.494,3,0.389,4,0.298,5,0.494,6,1.082,7,0.994,8,0.622,9,1.544,10,1.789,11,2.309,12,1.676,13,0.092,14,1.544,15,0.955,16,1.892,17,1.544,18,0.463,19,1.212,20,2.133,21,0.781,22,1.892,23,1.544,24,2.133,25,1.892,26,0.298,27,1.544,28,0.941,29,0.781,30,0.994,31,0.994,32,0.567,33,0.603,34,0.389,35,0.781,36,0.965,37,0.781,38,0.994,39,0.994,40,0.994,41,0.622,42,0.603,43,0.903,44,1.814,45,2.133,46,0.389,47,0.622,48,0.389,49,0.389,50,0.781,51,1.544,52,1.892,53,0.997,54,1.544,55,0.994,56,1.334,57,0.781,58,0.781,59,0.994,60,0.965,61,0.965,62,0.994,63,0.994,64,0.781,65,0.051,66,1.544,67,0.994,68,0.994,69,0.781,70,0.781,71,0.781,72,0.994,73,0.994,74,0.994,75,1.814,76,0.318,77,0.994,78,0.994,79,0.781,80,0.781,81,0.494,82,0.781,83,0.494,84,0.781,85,1.892,86,0.994,87,0.994,88,1.676,89,0.994,90,1.544,91,1.892,92,0.994,93,1.212,94,0.994,95,1.528,96,1.444,97,0.994,98,1.544,99,0.994,100,0.781,101,0.994,102,0.781,103,0.994,104,0.994,105,0.994,106,0.994,107,2.127,108,1.544,109,0.994,110,1.212,111,0.994,112,0.994,113,0.994,114,0.994,115,0.994,116,0.994,117,0.622,118,1.544,119,1.892,120,1.544,121,0.994,122,0.994,123,0.994,124,0.994,125,1.544,126,0.994,127,0.994,128,0.994,129,0.994,130,2.636,131,0.994,132,2.133,133,2.367,134,1.544,135,2.133,136,0.994,137,1.544,138,1.892,139,0.994,140,0.994,141,0.994,142,0.994,143,0.994,144,0.994,145,0.994,146,0.994,147,1.544,148,0.994,149,0.994,150,0.622,151,0.994,152,1.544,153,0.994,154,1.486,155,1.212,156,1.544,157,0.994,158,0.994,159,0.994,160,0.994,161,1.544,162,0.994,163,0.994,164,0.781,165,1.544,166,2.133,167,0.994,168,0.994,169,0.994,170,0.994,171,0.994,172,0.994,173,0.994,174,0.994,175,0.994,176,0.994,177,0.994,178,0.994,179,0.994,180,0.994,181,1.544,182,0.994,183,0.994,184,0.994,185,0.994,186,0.994,187,0.994,188,0.994,189,0.994,190,1.544,191,0.994,192,0.994,193,0.994,194,1.892,195,0.994,196,1.892,197,0.994,198,1.892,199,0.994,200,0.994,201,0.994,202,0.994,203,0.994,204,0.994,205,0.994,206,0.994,207,0.042]],["title/components/TextInputAutocompleteContainerComponent.html",[76,0.249,208,1.047]],["body/components/TextInputAutocompleteContainerComponent.html",[2,1.014,3,0.797,4,0.611,5,1.014,6,1.185,13,0.09,15,0.797,18,0.768,26,0.611,32,0.611,33,1.15,34,1.185,42,0.797,46,1.185,47,1.275,48,0.797,49,0.797,53,0.797,65,0.07,71,2.014,76,0.451,83,1.275,207,0.07,208,1.839,209,2.039,210,2.039,211,2.703,212,1.602,213,2.311,214,3.398,215,2.563,216,2.563,217,3.398,218,2.014,219,2.563,220,2.039,221,2.563,222,2.014,223,2.942,224,2.039,225,2.202,226,2.039,227,2.039]],["title/directives/TextInputAutocompleteDirective.html",[18,0.502,49,0.654]],["body/directives/TextInputAutocompleteDirective.html",[0,0.496,1,0.623,2,0.395,3,0.31,4,0.238,5,1.434,6,1.213,7,0.793,8,0.496,10,1.741,11,1.29,12,1.911,13,0.092,15,0.866,16,2.215,17,1.29,18,0.489,19,1.475,20,2.334,21,1.281,22,2.334,23,1.63,24,2.215,25,2.334,26,0.238,27,1.29,28,0.934,29,0.623,30,0.793,31,0.793,32,0.619,33,0.637,34,0.31,35,0.623,36,0.807,37,0.623,38,0.793,39,0.793,40,0.793,41,0.496,42,0.504,43,0.808,44,1.74,45,1.878,46,0.504,47,0.807,48,0.31,49,0.504,50,1.013,51,1.878,52,2.215,53,1.072,54,1.878,55,1.63,56,1.616,57,1.013,58,1.013,59,1.63,60,1.385,61,1.02,62,0.793,63,1.29,64,1.013,65,0.051,66,1.878,67,1.63,68,1.29,69,1.013,70,1.013,71,1.013,72,1.29,73,1.29,74,1.63,75,1.74,76,0.33,77,1.29,78,1.29,79,1.013,80,1.013,81,0.642,82,1.013,83,0.642,84,1.281,85,2.215,86,1.29,87,1.63,88,1.475,89,1.29,90,1.878,91,2.215,92,1.63,93,1.833,94,1.29,95,1.573,96,1.521,97,1.29,98,1.63,99,1.63,100,0.623,101,1.29,102,1.013,103,1.63,104,0.793,105,0.793,106,0.793,107,1.975,108,1.29,109,0.793,110,1.013,111,0.793,112,1.29,113,1.878,114,0.793,115,1.29,116,0.793,117,0.496,118,1.29,119,1.63,120,1.29,121,0.793,122,0.793,123,0.793,124,0.793,125,1.29,126,0.793,127,0.793,128,1.29,129,0.793,130,2.432,131,0.793,132,1.878,133,2.265,134,1.29,135,1.878,136,0.793,137,1.29,138,1.63,139,0.793,140,0.793,141,0.793,142,0.793,143,0.793,144,0.793,145,0.793,146,0.793,147,1.29,148,0.793,149,0.793,150,0.496,151,0.793,152,1.29,153,0.793,154,1.281,155,1.013,156,1.29,157,0.793,158,0.793,159,0.793,160,0.793,161,1.29,162,0.793,163,0.793,164,1.74,165,1.29,166,1.878,167,0.793,168,0.793,169,0.793,170,0.793,171,0.793,172,0.793,173,0.793,174,0.793,175,0.793,176,0.793,177,0.793,178,0.793,179,0.793,180,0.793,181,1.29,182,0.793,183,0.793,184,0.793,185,0.793,186,0.793,187,0.793,188,1.29,189,1.63,190,1.29,191,0.793,192,0.793,193,0.793,194,1.63,195,0.793,196,1.63,197,0.793,198,1.63,199,0.793,200,0.793,201,0.793,202,0.793,203,0.793,204,0.793,205,0.793,206,0.793,207,0.035,212,0.623,225,1.013,228,1.71,229,1.71,230,1.63,231,1.71,232,1.71,233,1.052,234,2.854,235,1.052,236,1.29,237,1.623,238,1.052,239,1.052,240,1.052,241,1.052,242,1.052,243,1.052,244,1.052,245,1.052,246,1.052,247,1.052,248,1.052,249,1.63,250,1.052,251,1.052,252,1.052,253,1.052,254,1.052,255,1.052,256,1.052]],["title/components/TextInputAutocompleteMenuComponent.html",[32,0.502,76,0.249]],["body/components/TextInputAutocompleteMenuComponent.html",[2,0.559,3,0.44,4,0.337,5,1.495,6,1.21,8,1.527,9,1.697,10,1.816,12,2.154,13,0.092,14,1.697,15,0.663,18,0.508,19,1.787,21,1.605,26,0.337,32,0.682,33,0.889,34,1.21,36,1.277,37,0.884,42,0.44,44,1.918,46,0.954,47,0.703,48,0.44,49,0.44,53,1.072,56,0.703,60,1.605,61,1.605,65,0.046,75,1.333,76,0.364,83,0.844,88,1.333,95,1.277,96,1.061,100,1.787,107,1.333,110,1.333,133,1.918,150,1.422,154,0.884,155,0.884,164,1.605,207,0.046,208,0.703,209,1.125,210,1.125,212,0.884,213,1.787,215,1.697,216,2.275,218,1.333,219,2.043,220,1.125,221,1.697,222,1.333,223,2.275,224,1.125,225,1.787,226,1.125,227,1.125,234,2.977,236,1.125,237,1.605,249,2.043,257,1.491,258,1.697,259,1.697,260,1.697,261,2.249,262,2.249,263,2.249,264,1.697,265,2.043,266,2.043,267,2.043,268,2.043,269,3.016,270,3.016,271,3.016,272,3.016,273,3.016,274,3.016,275,2.249,276,2.249,277,2.249,278,1.491,279,1.491,280,1.491,281,1.491,282,1.491,283,1.491,284,1.491,285,1.491,286,1.491,287,1.491,288,2.249,289,1.491,290,1.491,291,1.491,292,1.491,293,2.249,294,3.016,295,1.491,296,1.491,297,1.491,298,1.491,299,1.491,300,1.491,301,1.491,302,1.491,303,1.491,304,1.491,305,1.491,306,2.249,307,1.491,308,2.566,309,1.491,310,2.249,311,1.491,312,1.491,313,1.491,314,2.708,315,2.708,316,2.249,317,2.249,318,1.491,319,1.491,320,1.491,321,1.491,322,1.491,323,1.491,324,1.491,325,1.491,326,1.491,327,1.491,328,1.491,329,1.491,330,1.491,331,1.491,332,1.491,333,1.491,334,1.491,335,1.125,336,1.491,337,1.491]],["title/modules/TextInputAutocompleteModule.html",[338,0.654,339,1.047]],["body/modules/TextInputAutocompleteModule.html",[2,1.076,3,0.846,4,0.648,5,1.076,6,1.174,13,0.091,15,1.227,26,0.648,32,0.953,33,1.126,34,1.039,35,1.699,42,1.126,48,0.846,49,1.205,65,0.072,207,0.072,208,1.928,338,0.846,339,1.663,340,2.868,341,2.659,342,2.659,343,2.659,344,3.526,345,2.868,346,2.868,347,2.868]],["title/changelog.html",[43,0.552,348,0.884,349,1.873]],["body/changelog.html",[4,0.557,13,0.066,28,0.924,41,1.162,46,0.726,50,1.46,53,1.202,56,1.162,57,1.46,58,1.46,65,0.066,70,2.108,76,0.277,81,1.202,117,1.162,207,0.066,230,1.858,258,1.858,259,1.858,260,2.416,335,1.858,350,3.558,351,2.464,352,2.464,353,2.464,354,1.46,355,2.464,356,2.464,357,2.464,358,2.464,359,2.464,360,2.464,361,2.464,362,3.558,363,2.464,364,3.905,365,3.558,366,2.464,367,2.464,368,2.464,369,3.203,370,2.464,371,3.905,372,3.905,373,2.464,374,2.464,375,2.464,376,2.464,377,2.464,378,2.464,379,3.558,380,3.203,381,2.464,382,2.464,383,2.464,384,2.464,385,2.684,386,2.464,387,2.464,388,3.905,389,2.464,390,2.464,391,2.464,392,2.464,393,2.464,394,2.464,395,2.464,396,2.464,397,2.464,398,1.858,399,2.464,400,2.464,401,2.842,402,2.464,403,3.558,404,2.464,405,2.464,406,2.464,407,2.464,408,2.684,409,2.464,410,2.464,411,2.464,412,2.464,413,2.464,414,2.416,415,2.464,416,1.858,417,1.162,418,2.464,419,2.464,420,2.464,421,2.464,422,2.464,423,2.464,424,2.464,425,1.858,426,2.464,427,2.464,428,2.464]],["title/dependencies.html",[414,1.413,417,1.254]],["body/dependencies.html",[13,0.087,26,0.754,28,1.252,29,1.977,41,1.574,65,0.079,207,0.079,416,2.517,417,1.82,429,3.337,430,3.337,431,3.337]],["title/index.html",[8,0.884,43,0.552,348,0.884]],["body/index.html",[3,0.786,6,1.164,10,1.257,13,0.091,15,1.144,18,0.603,26,0.761,28,0.706,32,0.603,33,1.144,34,1.048,42,0.913,43,0.786,46,0.786,48,0.993,53,1.048,61,1.46,65,0.055,76,0.466,79,1.114,80,1.114,81,1.264,82,1.579,83,1.264,84,1.579,93,1.114,95,1.257,96,1.257,102,1.114,117,1.46,150,0.887,207,0.055,213,1.579,218,1.114,222,1.114,237,1.114,264,2.011,265,1.419,266,1.419,267,1.419,268,1.419,338,0.555,339,1.257,341,1.419,342,1.419,343,2.336,348,0.887,354,1.835,385,2.011,398,2.011,401,1.419,408,2.786,417,0.887,432,3.369,433,2.666,434,1.881,435,1.881,436,3.88,437,3.369,438,1.114,439,1.881,440,1.881,441,1.881,442,1.881,443,3.947,444,1.881,445,1.881,446,1.881,447,2.666,448,3.369,449,1.881,450,1.419,451,3.369,452,2.666,453,1.881,454,1.881,455,1.881,456,2.666,457,1.881,458,1.881,459,1.881,460,1.881,461,1.881,462,1.881,463,1.881,464,1.881,465,2.666,466,2.666,467,1.881,468,1.419,469,1.881,470,1.881,471,2.666,472,1.881,473,1.881,474,1.881,475,1.881,476,1.881,477,1.881,478,2.666,479,1.881,480,1.881,481,1.881,482,1.881,483,1.881,484,1.881,485,1.881,486,1.881,487,2.666,488,1.881,489,1.881,490,1.881,491,1.881,492,1.881,493,1.881,494,1.881,495,1.881,496,1.881,497,2.666,498,3.693,499,1.881,500,1.881,501,1.881,502,3.556,503,1.881,504,1.881,505,1.881,506,1.881,507,1.419]],["title/license.html",[43,0.552,348,0.884,438,1.11]],["body/license.html",[4,0.618,13,0.07,36,1.289,60,1.289,64,1.62,65,0.07,69,1.62,81,1.284,207,0.07,354,1.62,425,2.062,438,1.62,450,2.818,468,2.062,507,2.581,508,3.736,509,2.733,510,2.733,511,2.733,512,3.422,513,2.733,514,2.733,515,2.733,516,2.733,517,3.422,518,2.733,519,3.915,520,4.256,521,2.733,522,3.422,523,3.736,524,2.733,525,3.422,526,2.733,527,2.733,528,2.733,529,2.733,530,2.733,531,2.733,532,2.733,533,2.733,534,2.733,535,2.733,536,2.733,537,2.733,538,2.733,539,3.422,540,3.422,541,2.733,542,2.733,543,2.733,544,3.422,545,2.733,546,2.733,547,2.733,548,2.733,549,2.733,550,2.733,551,2.733,552,2.733,553,2.733,554,2.733,555,2.733,556,2.733,557,2.733,558,2.733,559,2.733,560,2.733,561,2.733,562,2.733,563,2.733]],["title/modules.html",[338,0.881]],["body/modules.html",[13,0.08,65,0.08,207,0.08,338,1.011,339,1.618,564,3.43]],["title/overview.html",[565,2.254]],["body/overview.html",[0,1.591,13,0.079,18,0.763,65,0.079,76,0.379,207,0.079,308,3.085,338,0.995,565,2.545,566,3.374]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":150,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["0.1.0",{"_index":424,"title":{},"body":{"changelog.html":{}}}],["0.1.1",{"_index":419,"title":{},"body":{"changelog.html":{}}}],["0.1.2",{"_index":415,"title":{},"body":{"changelog.html":{}}}],["0.2.0",{"_index":402,"title":{},"body":{"changelog.html":{}}}],["0.2.1",{"_index":393,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":387,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":378,"title":{},"body":{"changelog.html":{}}}],["0.4.1",{"_index":368,"title":{},"body":{"changelog.html":{}}}],["0.5.0",{"_index":360,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":420,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":362,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":403,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":394,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":389,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":390,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":426,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":308,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"overview.html":{}}}],["1.1.0",{"_index":430,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":197,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["10",{"_index":379,"title":{},"body":{"changelog.html":{}}}],["11a32ad",{"_index":406,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":404,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":370,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":395,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":566,"title":{},"body":{"overview.html":{}}}],["200px",{"_index":261,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["2017",{"_index":425,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2018",{"_index":388,"title":{},"body":{"changelog.html":{}}}],["2020",{"_index":369,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":361,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":363,"title":{},"body":{"changelog.html":{}}}],["3.1.0",{"_index":429,"title":{},"body":{"dependencies.html":{}}}],["4e02a45",{"_index":418,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":401,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["6.0.0",{"_index":431,"title":{},"body":{"dependencies.html":{}}}],["7a8ca90",{"_index":377,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":392,"title":{},"body":{"changelog.html":{}}}],["8000",{"_index":500,"title":{},"body":{"index.html":{}}}],["800f07d",{"_index":386,"title":{},"body":{"changelog.html":{}}}],["8d8af83",{"_index":409,"title":{},"body":{"changelog.html":{}}}],["9c785d2",{"_index":367,"title":{},"body":{"changelog.html":{}}}],["_choic",{"_index":303,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["abov",{"_index":538,"title":{},"body":{"license.html":{}}}],["accept",{"_index":94,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["accessor",{"_index":296,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["action",{"_index":558,"title":{},"body":{"license.html":{}}}],["activ",{"_index":396,"title":{},"body":{"changelog.html":{}}}],["activechoic",{"_index":269,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["actual_compon",{"_index":227,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["ad",{"_index":439,"title":{},"body":{"index.html":{}}}],["add",{"_index":385,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["allow",{"_index":365,"title":{},"body":{"changelog.html":{}}}],["ancestor",{"_index":383,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":532,"title":{},"body":{"license.html":{}}}],["angular",{"_index":408,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/common",{"_index":345,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["angular/cor",{"_index":26,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"dependencies.html":{},"index.html":{}}}],["app",{"_index":451,"title":{},"body":{"index.html":{}}}],["appear",{"_index":54,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["argument",{"_index":249,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["aris",{"_index":562,"title":{},"body":{"license.html":{}}}],["around",{"_index":440,"title":{},"body":{"index.html":{}}}],["array",{"_index":97,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["arrow",{"_index":399,"title":{},"body":{"changelog.html":{}}}],["associ",{"_index":521,"title":{},"body":{"license.html":{}}}],["author",{"_index":552,"title":{},"body":{"license.html":{}}}],["auto",{"_index":264,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["autocomplet",{"_index":34,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["autocomplete.direct",{"_index":346,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["autocomplete.directive.t",{"_index":7,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:106",{"_index":255,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:114",{"_index":253,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:123",{"_index":251,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:174",{"_index":248,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:238",{"_index":256,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:37",{"_index":244,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:42",{"_index":241,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:47",{"_index":243,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:52",{"_index":238,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:58",{"_index":242,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:63",{"_index":247,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:68",{"_index":246,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:73",{"_index":245,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:78",{"_index":239,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:83",{"_index":240,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:96",{"_index":235,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.module.t",{"_index":340,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["autocomplete/doc",{"_index":485,"title":{},"body":{"index.html":{}}}],["autocompletefor",{"_index":444,"title":{},"body":{"index.html":{}}}],["avail",{"_index":78,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["behavior",{"_index":335,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{}}}],["block",{"_index":219,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["blur",{"_index":230,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{},"changelog.html":{}}}],["boolean",{"_index":62,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["bootstrap",{"_index":470,"title":{},"body":{"index.html":{}}}],["box",{"_index":469,"title":{},"body":{"index.html":{}}}],["break",{"_index":410,"title":{},"body":{"changelog.html":{}}}],["brows",{"_index":564,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":446,"title":{},"body":{"index.html":{}}}],["bug",{"_index":371,"title":{},"body":{"changelog.html":{}}}],["built",{"_index":80,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"index.html":{}}}],["c",{"_index":509,"title":{},"body":{"license.html":{}}}],["c105a40",{"_index":384,"title":{},"body":{"changelog.html":{}}}],["c9ff811",{"_index":391,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":85,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["caret",{"_index":29,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"dependencies.html":{}}}],["caretposit",{"_index":169,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["catch(err",{"_index":139,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["chang",{"_index":350,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":349,"title":{"changelog.html":{}},"body":{}}],["charact",{"_index":51,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["charg",{"_index":516,"title":{},"body":{"license.html":{}}}],["choic",{"_index":10,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["choice.id",{"_index":294,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choiceload",{"_index":271,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choiceloaderror",{"_index":270,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choices(choic",{"_index":305,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choices.indexof(this.activechoic",{"_index":307,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choices.length",{"_index":309,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choices[0",{"_index":311,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choiceselect",{"_index":92,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["choiceselectedev",{"_index":1,"title":{"interfaces/ChoiceSelectedEvent.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["claim",{"_index":555,"title":{},"body":{"license.html":{}}}],["class",{"_index":48,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["class=\"dropdown",{"_index":266,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["close",{"_index":70,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"changelog.html":{}}}],["closemenuonblur",{"_index":74,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["commit",{"_index":358,"title":{},"body":{"changelog.html":{}}}],["commonmodul",{"_index":344,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["compil",{"_index":421,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":483,"title":{},"body":{"index.html":{}}}],["compon",{"_index":76,"title":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":224,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["componentfactoryresolv",{"_index":16,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["componentref",{"_index":17,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["compos",{"_index":441,"title":{},"body":{"index.html":{}}}],["condit",{"_index":537,"title":{},"body":{"license.html":{}}}],["connect",{"_index":563,"title":{},"body":{"license.html":{}}}],["const",{"_index":133,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["constructor",{"_index":112,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["constructor(componentfactoryresolv",{"_index":233,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["contain",{"_index":214,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{}}}],["container'},{'nam",{"_index":226,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["container.compon",{"_index":347,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["container.component.t",{"_index":211,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{}}}],["content",{"_index":435,"title":{},"body":{"index.html":{}}}],["continu",{"_index":504,"title":{},"body":{"index.html":{}}}],["contract",{"_index":559,"title":{},"body":{"license.html":{}}}],["control",{"_index":177,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["copi",{"_index":519,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":508,"title":{},"body":{"license.html":{}}}],["correct",{"_index":373,"title":{},"body":{"changelog.html":{}}}],["creat",{"_index":474,"title":{},"body":{"index.html":{}}}],["current",{"_index":494,"title":{},"body":{"index.html":{}}}],["cursor",{"_index":134,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["custom",{"_index":82,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"index.html":{}}}],["customis",{"_index":465,"title":{},"body":{"index.html":{}}}],["custommenucompon",{"_index":478,"title":{},"body":{"index.html":{}}}],["d2b7cd1",{"_index":423,"title":{},"body":{"changelog.html":{}}}],["damag",{"_index":556,"title":{},"body":{"license.html":{}}}],["de22714",{"_index":400,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":522,"title":{},"body":{"license.html":{}}}],["declar",{"_index":341,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["decor",{"_index":287,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["default",{"_index":237,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["defin",{"_index":234,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["demo",{"_index":432,"title":{},"body":{"index.html":{}}}],["democompon",{"_index":456,"title":{},"body":{"index.html":{}}}],["depend",{"_index":417,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["dev",{"_index":493,"title":{},"body":{"index.html":{}}}],["develop",{"_index":437,"title":{},"body":{"index.html":{}}}],["differ",{"_index":472,"title":{},"body":{"index.html":{}}}],["direct",{"_index":18,"title":{"directives/TextInputAutocompleteDirective.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{},"overview.html":{}}}],["directori",{"_index":495,"title":{},"body":{"index.html":{}}}],["display",{"_index":218,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["distribut",{"_index":530,"title":{},"body":{"license.html":{}}}],["document",{"_index":354,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["document:keydown.arrowdown",{"_index":275,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["document:keydown.arrowdown(ev",{"_index":278,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["document:keydown.arrowup",{"_index":276,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["document:keydown.arrowup(ev",{"_index":280,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["document:keydown.ent",{"_index":277,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["document:keydown.enter(ev",{"_index":282,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["dom",{"_index":209,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["dropdown",{"_index":258,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{}}}],["dropdownmenu",{"_index":265,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["dropdownmenuel",{"_index":272,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["element",{"_index":222,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["elementref",{"_index":19,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["elm",{"_index":113,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["end",{"_index":45,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["entrycompon",{"_index":342,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["environ",{"_index":490,"title":{},"body":{"index.html":{}}}],["err",{"_index":141,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["event",{"_index":60,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"license.html":{}}}],["event('input",{"_index":180,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["event.key",{"_index":115,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["event.preventdefault",{"_index":314,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["event.target.valu",{"_index":128,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["eventemitt",{"_index":20,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["export",{"_index":42,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["express",{"_index":64,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"license.html":{}}}],["extend",{"_index":79,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"index.html":{}}}],["f8cf905",{"_index":428,"title":{},"body":{"changelog.html":{}}}],["fals",{"_index":75,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["featur",{"_index":364,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"changelog.html":{},"license.html":{}}}],["final",{"_index":454,"title":{},"body":{"index.html":{}}}],["find",{"_index":464,"title":{},"body":{"index.html":{}}}],["findchoic",{"_index":99,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["findchoices(searchtext",{"_index":458,"title":{},"body":{"index.html":{}}}],["fit",{"_index":548,"title":{},"body":{"license.html":{}}}],["fix",{"_index":372,"title":{},"body":{"changelog.html":{}}}],["focu",{"_index":73,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["follow",{"_index":536,"title":{},"body":{"license.html":{}}}],["fontsiz",{"_index":194,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["fontsizestr",{"_index":192,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["forc",{"_index":173,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["form",{"_index":176,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["format",{"_index":101,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["formcontrolvalu",{"_index":457,"title":{},"body":{"index.html":{}}}],["framework",{"_index":473,"title":{},"body":{"index.html":{}}}],["free",{"_index":515,"title":{},"body":{"license.html":{}}}],["fulltemplatetypecheck",{"_index":422,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":93,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"index.html":{}}}],["furnish",{"_index":535,"title":{},"body":{"license.html":{}}}],["gener",{"_index":481,"title":{},"body":{"index.html":{}}}],["get",{"_index":348,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getcaretcoordin",{"_index":27,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["getchoic",{"_index":297,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["getchoicelabel",{"_index":103,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["getchoicelabel(choic",{"_index":463,"title":{},"body":{"index.html":{}}}],["getcomputedstyle(elm).fonts",{"_index":193,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["getcomputedstyle(elm).lineheight",{"_index":191,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["getlineheight",{"_index":229,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["getlineheight(elm",{"_index":188,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["grant",{"_index":514,"title":{},"body":{"license.html":{}}}],["guidelin",{"_index":359,"title":{},"body":{"changelog.html":{}}}],["height",{"_index":260,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{}}}],["here",{"_index":484,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":513,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":89,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["hidemenu",{"_index":202,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["higher",{"_index":411,"title":{},"body":{"changelog.html":{}}}],["highlight",{"_index":487,"title":{},"body":{"index.html":{}}}],["holder",{"_index":553,"title":{},"body":{"license.html":{}}}],["host",{"_index":71,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["hostlisten",{"_index":21,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["hostlistener('blur",{"_index":142,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["hostlistener('document:keydown.arrowdown",{"_index":312,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["hostlistener('document:keydown.arrowup",{"_index":318,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["hostlistener('document:keydown.ent",{"_index":320,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["hostlistener('input",{"_index":127,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["hostlistener('keydown",{"_index":121,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["hostlistener('keypress",{"_index":114,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["html",{"_index":221,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["htmlelement",{"_index":189,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["htmltextareael",{"_index":163,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["https://mattlewis92.github.io/angular",{"_index":433,"title":{},"body":{"index.html":{}}}],["i'm",{"_index":477,"title":{},"body":{"index.html":{}}}],["ignor",{"_index":39,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["implement",{"_index":50,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"changelog.html":{}}}],["impli",{"_index":546,"title":{},"body":{"license.html":{}}}],["import",{"_index":15,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["includ",{"_index":450,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{}}}],["initi",{"_index":427,"title":{},"body":{"changelog.html":{}}}],["injector",{"_index":22,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["input",{"_index":6,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["input(valu",{"_index":250,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["insertedat",{"_index":11,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["instal",{"_index":436,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/ChoiceSelectedEvent.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"overview.html":{}}}],["isn't",{"_index":376,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":397,"title":{},"body":{"changelog.html":{}}}],["item.tolowercase().includes(searchtext.tolowercas",{"_index":462,"title":{},"body":{"index.html":{}}}],["ivi",{"_index":475,"title":{},"body":{"index.html":{}}}],["jane",{"_index":460,"title":{},"body":{"index.html":{}}}],["john",{"_index":459,"title":{},"body":{"index.html":{}}}],["jonny'].filter(item",{"_index":461,"title":{},"body":{"index.html":{}}}],["key",{"_index":117,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"changelog.html":{},"index.html":{}}}],["keyboard",{"_index":57,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"changelog.html":{}}}],["keyboardev",{"_index":61,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["keyboardeventkeypolyfil",{"_index":452,"title":{},"body":{"index.html":{}}}],["keyboardshortcut",{"_index":59,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["keydown",{"_index":231,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["keydown(ev",{"_index":252,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["keypress",{"_index":232,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["keypress(key",{"_index":254,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["kind",{"_index":545,"title":{},"body":{"license.html":{}}}],["label",{"_index":161,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["label).length",{"_index":182,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["label.length",{"_index":186,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["lastcaretposit",{"_index":109,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["left",{"_index":155,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["legend",{"_index":220,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["lewi",{"_index":511,"title":{},"body":{"license.html":{}}}],["li",{"_index":328,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["li.getboundingclientrect",{"_index":331,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["li.scrollintoview",{"_index":334,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["liabil",{"_index":557,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":554,"title":{},"body":{"license.html":{}}}],["licens",{"_index":438,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limit",{"_index":525,"title":{},"body":{"license.html":{}}}],["line",{"_index":375,"title":{},"body":{"changelog.html":{}}}],["lineheight",{"_index":152,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["lineheightnum",{"_index":198,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["lineheightstr",{"_index":190,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["lineheightstr.tolowercas",{"_index":200,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["liposit",{"_index":330,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["liposition.top",{"_index":332,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["liter",{"_index":14,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["local",{"_index":492,"title":{},"body":{"index.html":{}}}],["locat",{"_index":374,"title":{},"body":{"changelog.html":{}}}],["log",{"_index":351,"title":{},"body":{"changelog.html":{}}}],["lose",{"_index":72,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["match",{"_index":65,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["matt",{"_index":510,"title":{},"body":{"license.html":{}}}],["max",{"_index":259,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{}}}],["member",{"_index":105,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["menu",{"_index":53,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{},"index.html":{}}}],["menu.compon",{"_index":35,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"modules/TextInputAutocompleteModule.html":{}}}],["menu.component.t",{"_index":257,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:35",{"_index":289,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:36",{"_index":290,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:37",{"_index":292,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:38",{"_index":284,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:39",{"_index":291,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:40",{"_index":285,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:41",{"_index":286,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:43",{"_index":295,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:46",{"_index":300,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:53",{"_index":298,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:58",{"_index":279,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:67",{"_index":281,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:76",{"_index":283,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menucompon",{"_index":84,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"index.html":{}}}],["menufactori",{"_index":147,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["menuhidden",{"_index":90,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["menushown",{"_index":87,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["merchant",{"_index":547,"title":{},"body":{"license.html":{}}}],["merg",{"_index":528,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":212,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["method",{"_index":228,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["mit",{"_index":507,"title":{},"body":{"index.html":{},"license.html":{}}}],["model",{"_index":175,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["modifi",{"_index":527,"title":{},"body":{"license.html":{}}}],["modul",{"_index":338,"title":{"modules/TextInputAutocompleteModule.html":{},"modules.html":{}},"body":{"modules/TextInputAutocompleteModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["multipl",{"_index":381,"title":{},"body":{"changelog.html":{}}}],["mwl",{"_index":213,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["mwltextinputautocomplet",{"_index":480,"title":{},"body":{"index.html":{}}}],["mymodul",{"_index":453,"title":{},"body":{"index.html":{}}}],["name",{"_index":225,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["nearest",{"_index":337,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["need",{"_index":447,"title":{},"body":{"index.html":{}}}],["new",{"_index":88,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["ng",{"_index":174,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["ngmodul",{"_index":343,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":206,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["node.j",{"_index":491,"title":{},"body":{"index.html":{}}}],["noninfring",{"_index":551,"title":{},"body":{"license.html":{}}}],["normal",{"_index":196,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["notabl",{"_index":352,"title":{},"body":{"changelog.html":{}}}],["notic",{"_index":539,"title":{},"body":{"license.html":{}}}],["now",{"_index":412,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":443,"title":{},"body":{"index.html":{}}}],["number",{"_index":44,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["obtain",{"_index":518,"title":{},"body":{"license.html":{}}}],["older",{"_index":445,"title":{},"body":{"index.html":{}}}],["on",{"_index":455,"title":{},"body":{"index.html":{}}}],["onarrowdown(ev",{"_index":313,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["onarrowup(ev",{"_index":319,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["onblur",{"_index":143,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["onc",{"_index":102,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"index.html":{}}}],["onchange(valu",{"_index":129,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["ondestroy",{"_index":23,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["onenter(ev",{"_index":321,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["onkeydown(ev",{"_index":122,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["onkeypress(key",{"_index":116,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["open",{"_index":366,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":56,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{}}}],["order",{"_index":106,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["otherwis",{"_index":561,"title":{},"body":{"license.html":{}}}],["out",{"_index":468,"title":{},"body":{"index.html":{},"license.html":{}}}],["output",{"_index":24,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["overflow",{"_index":262,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["overview",{"_index":565,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":414,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["paramet",{"_index":236,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["parsefloat(lineheightstr",{"_index":199,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["part",{"_index":488,"title":{},"body":{"index.html":{}}}],["particular",{"_index":549,"title":{},"body":{"license.html":{}}}],["pass",{"_index":479,"title":{},"body":{"index.html":{}}}],["peer",{"_index":416,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["permiss",{"_index":512,"title":{},"body":{"license.html":{}}}],["permit",{"_index":534,"title":{},"body":{"license.html":{}}}],["person",{"_index":517,"title":{},"body":{"license.html":{}}}],["pipe(takeuntil(this.menuhidden",{"_index":159,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["polyfil",{"_index":448,"title":{},"body":{"index.html":{}}}],["polyfillthen",{"_index":449,"title":{},"body":{"index.html":{}}}],["port",{"_index":499,"title":{},"body":{"index.html":{}}}],["portion",{"_index":542,"title":{},"body":{"license.html":{}}}],["posit",{"_index":216,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["prepar",{"_index":489,"title":{},"body":{"index.html":{}}}],["privat",{"_index":107,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["project",{"_index":353,"title":{},"body":{"changelog.html":{}}}],["promis",{"_index":98,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["properti",{"_index":9,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["provid",{"_index":543,"title":{},"body":{"license.html":{}}}],["publish",{"_index":529,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":550,"title":{},"body":{"license.html":{}}}],["px",{"_index":41,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"changelog.html":{},"dependencies.html":{}}}],["regular",{"_index":63,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["rel",{"_index":217,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{}}}],["relat",{"_index":486,"title":{},"body":{"index.html":{}}}],["releas",{"_index":505,"title":{},"body":{"index.html":{}}}],["releaselicens",{"_index":506,"title":{},"body":{"index.html":{}}}],["reload",{"_index":501,"title":{},"body":{"index.html":{}}}],["repo",{"_index":496,"title":{},"body":{"index.html":{}}}],["requir",{"_index":413,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":524,"title":{},"body":{"license.html":{}}}],["result",{"_index":207,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":96,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["right",{"_index":526,"title":{},"body":{"license.html":{}}}],["run",{"_index":498,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":37,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["rxjs/oper",{"_index":31,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["scroll",{"_index":380,"title":{},"body":{"changelog.html":{}}}],["scrollabl",{"_index":382,"title":{},"body":{"changelog.html":{}}}],["scrollbar",{"_index":405,"title":{},"body":{"changelog.html":{}}}],["scrolltochoice(index",{"_index":323,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["search",{"_index":66,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["searchregexp",{"_index":67,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["searchtext",{"_index":100,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["see",{"_index":355,"title":{},"body":{"changelog.html":{}}}],["select",{"_index":91,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["selectchoic",{"_index":273,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["selector",{"_index":46,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{},"index.html":{}}}],["sell",{"_index":533,"title":{},"body":{"license.html":{}}}],["server",{"_index":497,"title":{},"body":{"index.html":{}}}],["set",{"_index":304,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["setchoices(choic",{"_index":299,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["setcursorat",{"_index":181,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["shall",{"_index":540,"title":{},"body":{"license.html":{}}}],["shortcut",{"_index":58,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"changelog.html":{}}}],["show",{"_index":77,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["showmenu",{"_index":146,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["shown",{"_index":86,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["smooth",{"_index":336,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["softwar",{"_index":520,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["src/text",{"_index":5,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{}}}],["standard",{"_index":356,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":43,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"index.html":{}}}],["startindex",{"_index":166,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["string",{"_index":95,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["style",{"_index":215,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["style.left.px]=\"position?.left",{"_index":268,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["style.top.px]=\"position?.top",{"_index":267,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["subject",{"_index":36,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"license.html":{}}}],["sublicens",{"_index":531,"title":{},"body":{"license.html":{}}}],["subscribe(choic",{"_index":160,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["substanti",{"_index":541,"title":{},"body":{"license.html":{}}}],["tabl",{"_index":434,"title":{},"body":{"index.html":{}}}],["takeuntil",{"_index":30,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["templat",{"_index":83,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["test",{"_index":502,"title":{},"body":{"index.html":{}}}],["test:watch",{"_index":503,"title":{},"body":{"index.html":{}}}],["text",{"_index":33,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["textarea",{"_index":28,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["textarea.dispatchevent(new",{"_index":179,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["textarea.focu",{"_index":184,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["textarea.selectionstart",{"_index":171,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["textarea.setselectionrange(setcursorat",{"_index":183,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["textarea.valu",{"_index":165,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["textarea[mwltextinputautocomplete],input[type=\"text\"][mwltextinputautocomplet",{"_index":47,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["textinputautocompletecontainercompon",{"_index":208,"title":{"components/TextInputAutocompleteContainerComponent.html":{}},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{}}}],["textinputautocompletedirect",{"_index":49,"title":{"directives/TextInputAutocompleteDirective.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{}}}],["textinputautocompletemenucompon",{"_index":32,"title":{"components/TextInputAutocompleteMenuComponent.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["textinputautocompletemodul",{"_index":339,"title":{"modules/TextInputAutocompleteModule.html":{}},"body":{"modules/TextInputAutocompleteModule.html":{},"index.html":{},"modules.html":{}}}],["this._choic",{"_index":306,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this._choices[index",{"_index":324,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.activechoic",{"_index":310,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.choices.indexof(this.activechoic",{"_index":315,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.choices[index",{"_index":316,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.choiceselected.emit",{"_index":185,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.closemenuonblur",{"_index":145,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(this.menucompon",{"_index":148,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.dropdownmenuel",{"_index":325,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.dropdownmenuelement.nativeelement.children[index",{"_index":329,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.dropdownmenuelement.nativeelement.getboundingclientrect",{"_index":327,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.elm.nativeel",{"_index":156,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.elm.nativeelement.selectionstart",{"_index":135,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.getchoicelabel(choic",{"_index":162,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.getlineheight(this.elm.nativeel",{"_index":153,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.hidemenu",{"_index":132,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.injector",{"_index":151,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.keyboardshortcut",{"_index":123,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.keyboardshortcut(ev",{"_index":124,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu",{"_index":130,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu!.lastcaretposit",{"_index":170,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu!.triggercharacterposit",{"_index":167,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.changedetectorref.detectchang",{"_index":138,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.destroy",{"_index":203,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.instance.choic",{"_index":136,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.instance.choiceload",{"_index":137,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.instance.choiceloaderror",{"_index":140,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.instance.posit",{"_index":157,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.instance.selectchoic",{"_index":158,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.lastcaretposit",{"_index":144,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menuhidden$.next",{"_index":204,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menuhidden.emit",{"_index":205,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menushown.emit",{"_index":187,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.onchang",{"_index":126,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.scrolltochoice(index",{"_index":317,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.selectchoice.next(this.activechoic",{"_index":322,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.showmenu",{"_index":120,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.triggercharact",{"_index":118,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.usingshortcut",{"_index":119,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.viewcontainerref.createcompon",{"_index":149,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["through",{"_index":442,"title":{},"body":{"index.html":{}}}],["top",{"_index":154,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["topx",{"_index":40,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["topx(fontsizestr",{"_index":195,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["topx(lineheightstr",{"_index":201,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["tort",{"_index":560,"title":{},"body":{"license.html":{}}}],["trackbyid",{"_index":274,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["tree",{"_index":210,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["trigger",{"_index":52,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["triggercharact",{"_index":55,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["triggercharacterposit",{"_index":108,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["true",{"_index":125,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["ts",{"_index":38,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["tslint:dis",{"_index":104,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["type",{"_index":12,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["typeof",{"_index":293,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["ui",{"_index":466,"title":{},"body":{"index.html":{}}}],["ulposit",{"_index":326,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["ulposition.bottom",{"_index":333,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["undefin",{"_index":110,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["updat",{"_index":178,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["upgrad",{"_index":407,"title":{},"body":{"changelog.html":{}}}],["us",{"_index":81,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["usingshortcut",{"_index":111,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["valu",{"_index":164,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["value.slice(0",{"_index":168,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["value.slice(caretposit",{"_index":172,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["value[this.menu.triggercharacterposit",{"_index":131,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["var",{"_index":223,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["version",{"_index":357,"title":{},"body":{"changelog.html":{}}}],["via",{"_index":482,"title":{},"body":{"index.html":{}}}],["view",{"_index":398,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["viewchild",{"_index":288,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["viewchild('dropdownmenu",{"_index":302,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["viewcontainerref",{"_index":25,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["void",{"_index":301,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["w",{"_index":68,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["warranti",{"_index":544,"title":{},"body":{"license.html":{}}}],["well",{"_index":476,"title":{},"body":{"index.html":{}}}],["whether",{"_index":69,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"license.html":{}}}],["without",{"_index":523,"title":{},"body":{"license.html":{}}}],["work",{"_index":467,"title":{},"body":{"index.html":{}}}],["y",{"_index":263,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["you'r",{"_index":471,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ChoiceSelectedEvent.html":{"url":"interfaces/ChoiceSelectedEvent.html","title":"interface - ChoiceSelectedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ChoiceSelectedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/text-input-autocomplete.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choice\n                                \n                                \n                                        insertedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choice\n                                    \n                                \n                                \n                                    \n                                        choice:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        insertedAt\n                                    \n                                \n                                \n                                    \n                                        insertedAt:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Injector,\n  Input,\n  OnDestroy,\n  Output,\n  ViewContainerRef\n} from '@angular/core';\nimport getCaretCoordinates from 'textarea-caret';\nimport { takeUntil } from 'rxjs/operators';\nimport { TextInputAutocompleteMenuComponent } from './text-input-autocomplete-menu.component';\nimport { Subject } from 'rxjs';\n// @ts-ignore\nimport toPX from 'to-px';\n\nexport interface ChoiceSelectedEvent {\n  choice: any;\n  insertedAt: {\n    start: number;\n    end: number;\n  };\n}\n\n@Directive({\n  selector:\n    'textarea[mwlTextInputAutocomplete],input[type=\"text\"][mwlTextInputAutocomplete]'\n})\nexport class TextInputAutocompleteDirective implements OnDestroy {\n  /**\n   * The character that will trigger the menu to appear\n   */\n  @Input() triggerCharacter = '@';\n\n  /**\n   * An optional keyboard shortcut that will trigger the menu to appear\n   */\n  @Input() keyboardShortcut: (event: KeyboardEvent) => boolean;\n\n  /**\n   * The regular expression that will match the search text after the trigger character\n   */\n  @Input() searchRegexp = /^\\w*$/;\n\n  /**\n   * Whether to close the menu when the host textarea loses focus\n   */\n  @Input() closeMenuOnBlur = false;\n\n  /**\n   * The menu component to show with available options.\n   * You can extend the built in `TextInputAutocompleteMenuComponent` component to use a custom template\n   */\n  @Input() menuComponent = TextInputAutocompleteMenuComponent;\n\n  /**\n   * Called when the options menu is shown\n   */\n  @Output() menuShown = new EventEmitter();\n\n  /**\n   * Called when the options menu is hidden\n   */\n  @Output() menuHidden = new EventEmitter();\n\n  /**\n   * Called when a choice is selected\n   */\n  @Output() choiceSelected = new EventEmitter();\n\n  /**\n   * A function that accepts a search string and returns an array of choices. Can also return a promise.\n   */\n  @Input() findChoices: (searchText: string) => any[] | Promise;\n\n  /**\n   * A function that formats the selected choice once selected.\n   */\n  @Input() getChoiceLabel: (choice: any) => string = choice => choice;\n\n  /* tslint:disable member-ordering */\n  private menu:\n    | {\n        component: ComponentRef;\n        triggerCharacterPosition: number;\n        lastCaretPosition?: number;\n      }\n    | undefined;\n\n  private menuHidden$ = new Subject();\n\n  private usingShortcut = false;\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef,\n    private injector: Injector,\n    private elm: ElementRef\n  ) {}\n\n  @HostListener('keypress', ['$event.key'])\n  onKeypress(key: string) {\n    if (key === this.triggerCharacter) {\n      this.usingShortcut = false;\n      this.showMenu();\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    if (this.keyboardShortcut && this.keyboardShortcut(event)) {\n      this.usingShortcut = true;\n      this.showMenu();\n      this.onChange('');\n    }\n  }\n\n  @HostListener('input', ['$event.target.value'])\n  onChange(value: string) {\n    if (this.menu) {\n      if (\n        value[this.menu.triggerCharacterPosition] !== this.triggerCharacter &&\n        !this.usingShortcut\n      ) {\n        this.hideMenu();\n      } else {\n        const cursor = this.elm.nativeElement.selectionStart;\n        if (cursor  {\n                if (this.menu) {\n                  this.menu.component.instance.choices = choices;\n                  this.menu.component.instance.choiceLoading = false;\n                  this.menu.component.changeDetectorRef.detectChanges();\n                }\n              })\n              .catch(err => {\n                if (this.menu) {\n                  this.menu.component.instance.choiceLoading = false;\n                  this.menu.component.instance.choiceLoadError = err;\n                  this.menu.component.changeDetectorRef.detectChanges();\n                }\n              });\n          }\n        }\n      }\n    }\n  }\n\n  @HostListener('blur')\n  onBlur() {\n    if (this.menu) {\n      this.menu.lastCaretPosition = this.elm.nativeElement.selectionStart;\n\n      if (this.closeMenuOnBlur === true) {\n        this.hideMenu();\n      }\n    }\n  }\n\n  private showMenu() {\n    if (!this.menu) {\n      const menuFactory = this.componentFactoryResolver.resolveComponentFactory(this.menuComponent);\n      this.menu = {\n        component: this.viewContainerRef.createComponent(\n          menuFactory,\n          0,\n          this.injector\n        ),\n        triggerCharacterPosition: this.elm.nativeElement.selectionStart\n      };\n\n      const lineHeight = this.getLineHeight(this.elm.nativeElement);\n      const { top, left } = getCaretCoordinates(\n        this.elm.nativeElement,\n        this.elm.nativeElement.selectionStart\n      );\n      this.menu.component.instance.position = {\n        top: top + lineHeight,\n        left\n      };\n      this.menu.component.changeDetectorRef.detectChanges();\n      this.menu.component.instance.selectChoice\n        .pipe(takeUntil(this.menuHidden$))\n        .subscribe(choice => {\n          const label = this.getChoiceLabel(choice);\n          const textarea: HTMLTextAreaElement = this.elm.nativeElement;\n          const value: string = textarea.value;\n          const startIndex = this.menu!.triggerCharacterPosition;\n          const start = value.slice(0, startIndex);\n          const caretPosition =\n            this.menu!.lastCaretPosition || textarea.selectionStart;\n          const end = value.slice(caretPosition);\n          textarea.value = start + label + end;\n          // force ng model / form control to update\n          textarea.dispatchEvent(new Event('input'));\n          this.hideMenu();\n          const setCursorAt = (start + label).length;\n          textarea.setSelectionRange(setCursorAt, setCursorAt);\n          textarea.focus();\n          this.choiceSelected.emit({\n            choice,\n            insertedAt: {\n              start: startIndex,\n              end: startIndex + label.length\n            }\n          });\n        });\n      this.menuShown.emit();\n    }\n  }\n\n  getLineHeight(elm: HTMLElement): number {\n    const lineHeightStr = getComputedStyle(elm).lineHeight || '';\n    const fontSizeStr = getComputedStyle(elm).fontSize || '';\n    const fontSize = +toPX(fontSizeStr);\n    const normal = 1.2;\n    const lineHeightNum = parseFloat(lineHeightStr);\n\n    if (lineHeightStr === lineHeightNum + '') {\n      return fontSize * lineHeightNum;\n    }\n\n    if (lineHeightStr.toLowerCase() === 'normal') {\n      return fontSize * normal;\n    }\n\n    return toPX(lineHeightStr);\n  }\n\n  private hideMenu() {\n    if (this.menu) {\n      this.menu.component.destroy();\n      this.menuHidden$.next();\n      this.menuHidden.emit();\n      this.menu = undefined;\n    }\n  }\n\n  ngOnDestroy() {\n    this.hideMenu();\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextInputAutocompleteContainerComponent.html":{"url":"components/TextInputAutocompleteContainerComponent.html","title":"component - TextInputAutocompleteContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextInputAutocompleteContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/text-input-autocomplete-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mwl-text-input-autocomplete-container\n            \n\n\n            \n                styles\n                \n      :host {\n        position: relative;\n        display: block;\n      }\n    \n            \n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'mwl-text-input-autocomplete-container',\n  styles: [\n    `\n      :host {\n        position: relative;\n        display: block;\n      }\n    `\n  ],\n  template: ''\n})\nexport class TextInputAutocompleteContainerComponent {}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'TextInputAutocompleteContainerComponent', 'selector': 'mwl-text-input-autocomplete-container'},{'name': 'TextInputAutocompleteMenuComponent', 'selector': 'mwl-text-input-autocomplete-menu'}];\n    var DIRECTIVES = [{'name': 'TextInputAutocompleteDirective', 'selector': 'textarea[mwlTextInputAutocomplete],input[type=\"text\"][mwlTextInputAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextInputAutocompleteContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TextInputAutocompleteDirective.html":{"url":"directives/TextInputAutocompleteDirective.html","title":"directive - TextInputAutocompleteDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TextInputAutocompleteDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/text-input-autocomplete.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        textarea[mwlTextInputAutocomplete],input[type=\"text\"][mwlTextInputAutocomplete]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLineHeight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeMenuOnBlur\n                            \n                            \n                                findChoices\n                            \n                            \n                                getChoiceLabel\n                            \n                            \n                                keyboardShortcut\n                            \n                            \n                                menuComponent\n                            \n                            \n                                searchRegexp\n                            \n                            \n                                triggerCharacter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                choiceSelected\n                            \n                            \n                                menuHidden\n                            \n                            \n                                menuShown\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                input\n                            \n                            \n                                keydown\n                            \n                            \n                                keypress\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, injector: Injector, elm: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/text-input-autocomplete.directive.ts:96\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        elm\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        closeMenuOnBlur\n                    \n                    \n                        Whether to close the menu when the host textarea loses focus\n\n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        findChoices\n                    \n                    \n                        A function that accepts a search string and returns an array of choices. Can also return a promise.\n\n                            \n                            Type:    function\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:78\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        getChoiceLabel\n                    \n                    \n                        A function that formats the selected choice once selected.\n\n                            \n                            Type:    function\n\n                            \n                        \n                            Default value: choice => choice\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:83\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        keyboardShortcut\n                    \n                    \n                        An optional keyboard shortcut that will trigger the menu to appear\n\n                            \n                            Type:    function\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuComponent\n                    \n                    \n                        The menu component to show with available options.\nYou can extend the built in TextInputAutocompleteMenuComponent component to use a custom template\n\n                        \n                            Default value: TextInputAutocompleteMenuComponent\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        searchRegexp\n                    \n                    \n                        The regular expression that will match the search text after the trigger character\n\n                        \n                            Default value: /^\\w*$/\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        triggerCharacter\n                    \n                    \n                        The character that will trigger the menu to appear\n\n                        \n                            Default value: '@'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:37\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        choiceSelected\n                    \n                    \n                        Called when a choice is selected\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:73\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuHidden\n                    \n                    \n                        Called when the options menu is hidden\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:68\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuShown\n                    \n                    \n                        Called when the options menu is shown\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:63\n                            \n                        \n            \n        \n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:174\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event.target.value' \n                        \n                    \n                \n                    \ninput(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:123\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keydown\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nkeydown(event: KeyboardEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:114\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keypress\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event.key' \n                        \n                    \n                \n                    \nkeypress(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:106\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLineHeight\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLineHeight(elm: HTMLElement)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:238\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elm\n                                                        \n                                                                    HTMLElement\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Injector,\n  Input,\n  OnDestroy,\n  Output,\n  ViewContainerRef\n} from '@angular/core';\nimport getCaretCoordinates from 'textarea-caret';\nimport { takeUntil } from 'rxjs/operators';\nimport { TextInputAutocompleteMenuComponent } from './text-input-autocomplete-menu.component';\nimport { Subject } from 'rxjs';\n// @ts-ignore\nimport toPX from 'to-px';\n\nexport interface ChoiceSelectedEvent {\n  choice: any;\n  insertedAt: {\n    start: number;\n    end: number;\n  };\n}\n\n@Directive({\n  selector:\n    'textarea[mwlTextInputAutocomplete],input[type=\"text\"][mwlTextInputAutocomplete]'\n})\nexport class TextInputAutocompleteDirective implements OnDestroy {\n  /**\n   * The character that will trigger the menu to appear\n   */\n  @Input() triggerCharacter = '@';\n\n  /**\n   * An optional keyboard shortcut that will trigger the menu to appear\n   */\n  @Input() keyboardShortcut: (event: KeyboardEvent) => boolean;\n\n  /**\n   * The regular expression that will match the search text after the trigger character\n   */\n  @Input() searchRegexp = /^\\w*$/;\n\n  /**\n   * Whether to close the menu when the host textarea loses focus\n   */\n  @Input() closeMenuOnBlur = false;\n\n  /**\n   * The menu component to show with available options.\n   * You can extend the built in `TextInputAutocompleteMenuComponent` component to use a custom template\n   */\n  @Input() menuComponent = TextInputAutocompleteMenuComponent;\n\n  /**\n   * Called when the options menu is shown\n   */\n  @Output() menuShown = new EventEmitter();\n\n  /**\n   * Called when the options menu is hidden\n   */\n  @Output() menuHidden = new EventEmitter();\n\n  /**\n   * Called when a choice is selected\n   */\n  @Output() choiceSelected = new EventEmitter();\n\n  /**\n   * A function that accepts a search string and returns an array of choices. Can also return a promise.\n   */\n  @Input() findChoices: (searchText: string) => any[] | Promise;\n\n  /**\n   * A function that formats the selected choice once selected.\n   */\n  @Input() getChoiceLabel: (choice: any) => string = choice => choice;\n\n  /* tslint:disable member-ordering */\n  private menu:\n    | {\n        component: ComponentRef;\n        triggerCharacterPosition: number;\n        lastCaretPosition?: number;\n      }\n    | undefined;\n\n  private menuHidden$ = new Subject();\n\n  private usingShortcut = false;\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef,\n    private injector: Injector,\n    private elm: ElementRef\n  ) {}\n\n  @HostListener('keypress', ['$event.key'])\n  onKeypress(key: string) {\n    if (key === this.triggerCharacter) {\n      this.usingShortcut = false;\n      this.showMenu();\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    if (this.keyboardShortcut && this.keyboardShortcut(event)) {\n      this.usingShortcut = true;\n      this.showMenu();\n      this.onChange('');\n    }\n  }\n\n  @HostListener('input', ['$event.target.value'])\n  onChange(value: string) {\n    if (this.menu) {\n      if (\n        value[this.menu.triggerCharacterPosition] !== this.triggerCharacter &&\n        !this.usingShortcut\n      ) {\n        this.hideMenu();\n      } else {\n        const cursor = this.elm.nativeElement.selectionStart;\n        if (cursor  {\n                if (this.menu) {\n                  this.menu.component.instance.choices = choices;\n                  this.menu.component.instance.choiceLoading = false;\n                  this.menu.component.changeDetectorRef.detectChanges();\n                }\n              })\n              .catch(err => {\n                if (this.menu) {\n                  this.menu.component.instance.choiceLoading = false;\n                  this.menu.component.instance.choiceLoadError = err;\n                  this.menu.component.changeDetectorRef.detectChanges();\n                }\n              });\n          }\n        }\n      }\n    }\n  }\n\n  @HostListener('blur')\n  onBlur() {\n    if (this.menu) {\n      this.menu.lastCaretPosition = this.elm.nativeElement.selectionStart;\n\n      if (this.closeMenuOnBlur === true) {\n        this.hideMenu();\n      }\n    }\n  }\n\n  private showMenu() {\n    if (!this.menu) {\n      const menuFactory = this.componentFactoryResolver.resolveComponentFactory(this.menuComponent);\n      this.menu = {\n        component: this.viewContainerRef.createComponent(\n          menuFactory,\n          0,\n          this.injector\n        ),\n        triggerCharacterPosition: this.elm.nativeElement.selectionStart\n      };\n\n      const lineHeight = this.getLineHeight(this.elm.nativeElement);\n      const { top, left } = getCaretCoordinates(\n        this.elm.nativeElement,\n        this.elm.nativeElement.selectionStart\n      );\n      this.menu.component.instance.position = {\n        top: top + lineHeight,\n        left\n      };\n      this.menu.component.changeDetectorRef.detectChanges();\n      this.menu.component.instance.selectChoice\n        .pipe(takeUntil(this.menuHidden$))\n        .subscribe(choice => {\n          const label = this.getChoiceLabel(choice);\n          const textarea: HTMLTextAreaElement = this.elm.nativeElement;\n          const value: string = textarea.value;\n          const startIndex = this.menu!.triggerCharacterPosition;\n          const start = value.slice(0, startIndex);\n          const caretPosition =\n            this.menu!.lastCaretPosition || textarea.selectionStart;\n          const end = value.slice(caretPosition);\n          textarea.value = start + label + end;\n          // force ng model / form control to update\n          textarea.dispatchEvent(new Event('input'));\n          this.hideMenu();\n          const setCursorAt = (start + label).length;\n          textarea.setSelectionRange(setCursorAt, setCursorAt);\n          textarea.focus();\n          this.choiceSelected.emit({\n            choice,\n            insertedAt: {\n              start: startIndex,\n              end: startIndex + label.length\n            }\n          });\n        });\n      this.menuShown.emit();\n    }\n  }\n\n  getLineHeight(elm: HTMLElement): number {\n    const lineHeightStr = getComputedStyle(elm).lineHeight || '';\n    const fontSizeStr = getComputedStyle(elm).fontSize || '';\n    const fontSize = +toPX(fontSizeStr);\n    const normal = 1.2;\n    const lineHeightNum = parseFloat(lineHeightStr);\n\n    if (lineHeightStr === lineHeightNum + '') {\n      return fontSize * lineHeightNum;\n    }\n\n    if (lineHeightStr.toLowerCase() === 'normal') {\n      return fontSize * normal;\n    }\n\n    return toPX(lineHeightStr);\n  }\n\n  private hideMenu() {\n    if (this.menu) {\n      this.menu.component.destroy();\n      this.menuHidden$.next();\n      this.menuHidden.emit();\n      this.menu = undefined;\n    }\n  }\n\n  ngOnDestroy() {\n    this.hideMenu();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextInputAutocompleteMenuComponent.html":{"url":"components/TextInputAutocompleteMenuComponent.html","title":"component - TextInputAutocompleteMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextInputAutocompleteMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/text-input-autocomplete-menu.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mwl-text-input-autocomplete-menu\n            \n\n\n            \n                styles\n                \n      .dropdown-menu {\n        display: block;\n        max-height: 200px;\n        overflow-y: auto;\n      }\n    \n            \n\n            \n                template\n                 0\"\n  #dropdownMenu\n  class=\"dropdown-menu\"\n  [style.top.px]=\"position?.top\"\n  [style.left.px]=\"position?.left\">\n  \n    \n      {{ choice }}\n    \n  \n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeChoice\n                            \n                            \n                                choiceLoadError\n                            \n                            \n                                choiceLoading\n                            \n                            \n                                dropdownMenuElement\n                            \n                            \n                                position\n                            \n                            \n                                searchText\n                            \n                            \n                                selectChoice\n                            \n                            \n                                trackById\n                            \n                        \n                    \n                \n\n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:keydown.ArrowDown\n                            \n                            \n                                document:keydown.ArrowUp\n                            \n                            \n                                document:keydown.Enter\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:keydown.ArrowDown\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:keydown.ArrowDown(event: KeyboardEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document:keydown.ArrowUp\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:keydown.ArrowUp(event: KeyboardEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document:keydown.Enter\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:keydown.Enter(event: KeyboardEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:76\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeChoice\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeChoice:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            choiceLoadError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        choiceLoadError:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            choiceLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        choiceLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dropdownMenuElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dropdownMenuElement:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            position\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        position:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchText:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectChoice\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectChoice:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trackById\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trackById:     \n\n                    \n                \n                    \n                        \n                            Default value : (index: number, choice: any) =>\n    typeof choice.id !== 'undefined' ? choice.id : choice\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:43\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        choices\n                    \n                \n\n                \n                    \n                        getchoices()\n                    \n                \n                            \n                                \n                                    Defined in src/text-input-autocomplete-menu.component.ts:53\n                                \n                            \n\n                \n                    \n                        setchoices(choices: [])\n                    \n                \n                            \n                                \n                                    Defined in src/text-input-autocomplete-menu.component.ts:46\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            choices\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'mwl-text-input-autocomplete-menu',\n  template: `\n     0\"\n      #dropdownMenu\n      class=\"dropdown-menu\"\n      [style.top.px]=\"position?.top\"\n      [style.left.px]=\"position?.left\">\n      \n        \n          {{ choice }}\n        \n      \n    \n  `,\n  styles: [\n    `\n      .dropdown-menu {\n        display: block;\n        max-height: 200px;\n        overflow-y: auto;\n      }\n    `\n  ]\n})\nexport class TextInputAutocompleteMenuComponent {\n  @ViewChild('dropdownMenu') dropdownMenuElement: ElementRef;\n  position: { top: number; left: number };\n  selectChoice = new Subject();\n  activeChoice: any;\n  searchText: string;\n  choiceLoadError: any;\n  choiceLoading = false;\n  private _choices: any[];\n  trackById = (index: number, choice: any) =>\n    typeof choice.id !== 'undefined' ? choice.id : choice;\n\n  set choices(choices: any[]) {\n    this._choices = choices;\n    if (choices.indexOf(this.activeChoice) === -1 && choices.length > 0) {\n      this.activeChoice = choices[0];\n    }\n  }\n\n  get choices() {\n    return this._choices;\n  }\n\n  @HostListener('document:keydown.ArrowDown', ['$event'])\n  onArrowDown(event: KeyboardEvent) {\n    event.preventDefault();\n    const index = this.choices.indexOf(this.activeChoice);\n    if (this.choices[index + 1]) {\n      this.scrollToChoice(index + 1);\n    }\n  }\n\n  @HostListener('document:keydown.ArrowUp', ['$event'])\n  onArrowUp(event: KeyboardEvent) {\n    event.preventDefault();\n    const index = this.choices.indexOf(this.activeChoice);\n    if (this.choices[index - 1]) {\n      this.scrollToChoice(index - 1);\n    }\n  }\n\n  @HostListener('document:keydown.Enter', ['$event'])\n  onEnter(event: KeyboardEvent) {\n    if (this.choices.indexOf(this.activeChoice) > -1) {\n      event.preventDefault();\n      this.selectChoice.next(this.activeChoice);\n    }\n  }\n\n  private scrollToChoice(index: number) {\n    this.activeChoice = this._choices[index];\n\n    if (this.dropdownMenuElement) {\n      const ulPosition = this.dropdownMenuElement.nativeElement.getBoundingClientRect();\n      const li = this.dropdownMenuElement.nativeElement.children[index];\n      const liPosition = li.getBoundingClientRect();\n\n      if (\n        liPosition.top  ulPosition.bottom\n      ) {\n        li.scrollIntoView({\n          behavior: 'smooth',\n          block: 'nearest'\n        });\n      }\n    }\n  }\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0\"  #dropdownMenu  class=\"dropdown-menu\"  [style.top.px]=\"position?.top\"  [style.left.px]=\"position?.left\">            {{ choice }}      '\n    var COMPONENTS = [{'name': 'TextInputAutocompleteContainerComponent', 'selector': 'mwl-text-input-autocomplete-container'},{'name': 'TextInputAutocompleteMenuComponent', 'selector': 'mwl-text-input-autocomplete-menu'}];\n    var DIRECTIVES = [{'name': 'TextInputAutocompleteDirective', 'selector': 'textarea[mwlTextInputAutocomplete],input[type=\"text\"][mwlTextInputAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextInputAutocompleteMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TextInputAutocompleteModule.html":{"url":"modules/TextInputAutocompleteModule.html","title":"module - TextInputAutocompleteModule","body":"\n                   \n\n\n\n\n  Modules\n  TextInputAutocompleteModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/text-input-autocomplete.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TextInputAutocompleteContainerComponent\n                            \n                            \n                                TextInputAutocompleteDirective\n                            \n                            \n                                TextInputAutocompleteMenuComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                TextInputAutocompleteMenuComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TextInputAutocompleteContainerComponent\n                            \n                            \n                                    TextInputAutocompleteDirective\n                            \n                            \n                                    TextInputAutocompleteMenuComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TextInputAutocompleteDirective } from './text-input-autocomplete.directive';\nimport { TextInputAutocompleteContainerComponent } from './text-input-autocomplete-container.component';\nimport { TextInputAutocompleteMenuComponent } from './text-input-autocomplete-menu.component';\n\n@NgModule({\n  declarations: [\n    TextInputAutocompleteDirective,\n    TextInputAutocompleteContainerComponent,\n    TextInputAutocompleteMenuComponent\n  ],\n  imports: [CommonModule],\n  exports: [\n    TextInputAutocompleteDirective,\n    TextInputAutocompleteContainerComponent,\n    TextInputAutocompleteMenuComponent\n  ],\n  entryComponents: [TextInputAutocompleteMenuComponent]\n})\nexport class TextInputAutocompleteModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n\n0.5.0 (2021-02-26)\nFeatures\n\nallow opening the menu with a keyboard shortcut (9c785d2)\n\n\n0.4.1 (2020-02-15)\nBug Fixes\n\ncorrect menu location if line-height of textarea isn't in px (7a8ca90)\n\n\n0.4.0 (2020-02-10)\nBug Fixes\n\nscroll behavior if menu has multiple scrollable ancestors (c105a40)\n\nFeatures\n\nadd option to close menu on blur (800f07d)\n\n\n0.3.0 (2018-07-08)\nFeatures\n\nadd a component selector to the dropdown menu (c9ff811), closes #8\n\n\n0.2.1 (2018-06-16)\nBug Fixes\n\nmenu: scroll active item into view when using arrow keys (de22714), closes #6\n\n\n0.2.0 (2018-05-14)\nFeatures\n\nadd max height and scrollbar to menu (11a32ad)\nupgrade to angular 6 (8d8af83)\n\nBREAKING CHANGES\n\nangular 6 or higher is now required to use this package\n\n\n0.1.2 (2018-05-05)\nBug Fixes\n\nallow angular 6 peer dependency (4e02a45)\n\n\n0.1.1 (2018-01-10)\nBug Fixes\n\nallow the package to be compiled with fullTemplateTypecheck (d2b7cd1)\n\n\n0.1.0 (2017-10-09)\nFeatures\n\ninitial implementation (f8cf905)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            textarea-caret : ^3.1.0\n        \n            to-px : ^1.1.0\n    \n\n\n    \n    \n        Peer Dependencies\n    \n    \n        \n            @angular/core : >=6.0.0 \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nangular text input autocomplete\n\n\n\n\n\n\n\nDemo\nhttps://mattlewis92.github.io/angular-text-input-autocomplete/\nTable of contents\n\nAbout\nInstallation\nDocumentation\nDevelopment\nLicense\n\nAbout\nA angular 6+ directive for adding autocomplete functionality to text input elements, built around composability\nInstallation\nInstall through npm:\nnpm install angular-text-input-autocompleteFor older browsers you will need the keyboardevent-key-polyfill polyfill:\nnpm install keyboardevent-key-polyfillThen include in your apps module:\nimport { polyfill as keyboardEventKeyPolyfill } from 'keyboardevent-key-polyfill';\nimport { NgModule } from '@angular/core';\nimport { TextInputAutocompleteModule } from 'angular-text-input-autocomplete';\n\nkeyboardEventKeyPolyfill();\n\n@NgModule({\n  imports: [TextInputAutocompleteModule]\n})\nexport class MyModule {}Finally use in one of your apps components:\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'mwl-demo-app',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class DemoComponent {\n  formControlValue = '';\n\n  findChoices(searchText: string) {\n    return ['John', 'Jane', 'Jonny'].filter(item =>\n      item.toLowerCase().includes(searchText.toLowerCase())\n    );\n  }\n\n  getChoiceLabel(choice: string) {\n    return `@${choice} `;\n  }\n}You may also find it useful to view the demo source.\nCustomising the menu component UI\nBy default the component works out of the box with bootstrap, but if you're using a different UI framework then you can customise the menu component that gets displayed.\n\nCreate a custom menu component and add it to your components NgModule declarations (If you're not using ivy then you will need to add it to entryComponents as well)\n\nimport { Component } from '@angular/core';\nimport { TextInputAutocompleteMenuComponent } from 'angular-text-input-autocomplete';\n\n@Component({\n  template: `\n    I'm a custom menu template!\n     0\"\n      #dropdownMenu\n      class=\"dropdown-menu\"\n      [style.top.px]=\"position?.top\"\n      [style.left.px]=\"position?.left\">\n      \n        \n          {{ choice }}\n        \n      \n    \n  `\n})\nclass CustomMenuComponent extends TextInputAutocompleteMenuComponent {}\nPass the component to the menuComponent input of the mwlTextInputAutocomplete directive\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'mwl-demo-app',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class DemoComponent {\n  menuComponent = CustomMenuComponent;\n}Documentation\nAll documentation is auto-generated from the source via compodoc and can be viewed here:\nhttps://mattlewis92.github.io/angular-text-input-autocomplete/docs/\nRelated\nangular-text-input-highlight - a component for highlighting parts of a textarea\nDevelopment\nPrepare your environment\n\nInstall Node.js and NPM\nInstall local dev dependencies: npm install while current directory is this repo\n\nDevelopment server\nRun npm start to start a development server on port 8000 with auto reload + tests.\nTesting\nRun npm test to run tests once or npm run test:watch to continually run tests.\nRelease\nnpm run releaseLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2017 Matt Lewis\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        TextInputAutocompleteModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        2 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 directive\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 interface\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
